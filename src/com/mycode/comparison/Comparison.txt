Рассматрим ArrayList и LinkedList.
В каждый лист было добавлено 10000 элементов Person.
Видим, что общее время работы у массива меньше, чем у списка по всем рассмотренным методам.
Везде писали, что недостатки ArrayList проявляются при вставке/удалении элемента в середине списка
— это взывает перезапись всех элементов размещенных «правее» в списке на одну позицию влево, кроме того,
при удалении элементов размер массива не уменьшается.
Здесь же мы видим, что добавление элемента у ArrayList происходит быстрее, не имея разницы, в конец  добавляем или в середину.

Working time of  ArrayList is equal  4097600
Working time of  LinkedList is equal 57244500
_________add element_________
Add time of  ArrayList is equal  1194400
Add time of  LinkedList is equal 1332199
_________add element by index_________
Add time of  ArrayList is equal  1220300
Add time of  LinkedList is equal 1434900
_________remove element_________
Remove time of  ArrayList is equal  1770500
Remove time of  LinkedList is equal 2134399
_________set element_________
Set time of  ArrayList is equal  3787099
Set time of  LinkedList is equal 56879100


 Перейдем к HashSet, LinkedHashSet и TreeSet.
 Можно заметить, что самое долгое время выполнения у TreeSet, что можно объяснить тем,
 что TreeSet обеспечивает упорядоченно хранение элементов в виде красно-черного дерева
 Самое быстрое время выполнения для добавления элемена в конец и удаления по ключу у HashSet.
 Проверка на то, содержиться ли элемент в коллекции у LinkedHashSet и HashSet отличается не сильно,
 но все же LinkedHashSet уступает.

Working time of  HashSet is equal       6349100
Working time of  LinkedHashSet is equal 20075600
Working time of  TreeSet is equal       34308000
_________add element_________
Add time of  HashSet is equal       5256700
Add time of  LinkedHashSet is equal 20044300
Add time of  TreeSet is equal       13614300
_________contains element_________
time of  HashSet is equal       1063400
time of  LinkedHashSet is equal 14807800
time of  TreeSet is equal       28516700
_________remove element_________
Remove time of  HashSet is equal       27500
Remove time of  LinkedHashSet is equal 13754100
Remove time of  TreeSet is equal       27986200


Рассмотрим производительность HashMap, LinkedHashMap, TreeMap. Как можно заметить, добавление элемента происходит быстрее у HashMap,
чем у LinkedHashMap и TreeMap, у них время примерно одинаковое.
При выполнении  проверки на содержания ключа и  удаления самое быстрое время показывает реализация HashMap, как и ранее.
HashMap состоит из «корзин». «Корзины» — это элементы массива, которые хранят ссылки на списки элементов.
Добавление, поиск и удаление элементов выполняется за константное время.

Working time of  HashMap is equal         8322700
Working time of  LinkedHashMap is equal   14288100
Working time of  TreeMap is equal         32770500
____________________add element_________________________
Add time of  HashMap is equal              8269200
Add time of  LinkedHashMap is equal        14273900
Add time of  TreeMap is equal              18368700
__________________contains element______________________
time of  HashMap is equal                  35000
time of  LinkedHashMap is equal            6010100
time of  TreeMap is equal                  24467300
__________________remove element__________________________
Remove time of  HashMap is equal          17000
Remove time of  LinkedHashMap is equal    5982400
Remove time of  TreeMap is equal          24464700